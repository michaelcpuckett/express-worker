{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;A;ACAA,IAAI,SAAS;AACb,IAAI,2BAA2B;AAE/B,IAAM,mBAAmB,IAAI,iBAAiB;AAG9C,yBAAyB,aAAa,CACpC,oCACA,+DACA,oEACA;AAIF,yBAAyB,gBAAgB,CAAC,WAAW;IACnD,yBAAyB,WAAW;IAEpC,iBAAiB,WAAW,CAAC;QAC3B,MAAM;QACN,MAAM;IACP;AACH;AAEA,yBAAyB,gBAAgB,CAAC,YAAY;IACpD,iBAAiB,WAAW,CAAC;QAC3B,MAAM;QACN,MAAM;IACP;IAED,yBAAyB,OAAO,CAAC,KAAK;IAEtC,IAAM,aAAa,QAAQ,MAAM;IAKjC,WAAW,UAAU,GAAG;QACtB,OAAO;IACT;IAGA,WAAW,OAAO,GAAG,IAAI,CAAC,SAAC;QACzB,iBAAiB,WAAW,CAAC;YAC3B,MAAM;YACN,MAAM,qBAAqB,UAAU,aAAa;QACnD;QAED,iBAAiB,WAAW,CAAC;YAC3B,MAAM;YACN,MAAM;gBACJ,IAAI;gBACJ,aAAa;gBACb,OAAO,EAAE;gBACT,KAAK,EAAE;gBACP,SAAS,UAAU,aAAa,KAAK;gBACrC,OAAO;YACR;QACF;IACH;AACF","sources":[".karma-parcel/__parcel_bundled_tests.js","tests/sw.ts"],"sourcesContent":["import \"../tests/sw.ts\";","var window = self;\nvar serviceWorkerGlobalScope = self as unknown as ServiceWorkerGlobalScope;\n\nconst broadcastChannel = new BroadcastChannel('sw-messages');\n\n// Load Jasmine and the tests into global scope.\nserviceWorkerGlobalScope.importScripts(\n  '/base/dist/express-worker.umd.js',\n  '/base/node_modules/jasmine-core/lib/jasmine-core/jasmine.js',\n  '/base/node_modules/jasmine-core/lib/jasmine-core/jasmine-html.js',\n  '/base/node_modules/jasmine-core/lib/jasmine-core/boot0.js',\n  // '/base/tests/index.js',\n);\n\nserviceWorkerGlobalScope.addEventListener('install', () => {\n  serviceWorkerGlobalScope.skipWaiting();\n\n  broadcastChannel.postMessage({\n    type: 'info',\n    data: 'Install event from Service Worker',\n  });\n});\n\nserviceWorkerGlobalScope.addEventListener('activate', () => {\n  broadcastChannel.postMessage({\n    type: 'info',\n    data: 'Activate event from Service Worker',\n  });\n\n  serviceWorkerGlobalScope.clients.claim();\n\n  const jasmineEnv = jasmine.getEnv() as unknown as jasmine.Env & {\n    specFilter: () => boolean;\n  };\n\n  // Implement the required function.\n  jasmineEnv.specFilter = () => {\n    return true;\n  };\n\n  // Run the tests and report the results to the original window.\n  jasmineEnv.execute().then((execution) => {\n    broadcastChannel.postMessage({\n      type: 'info',\n      data: 'Jasmine status: ' + execution.overallStatus,\n    });\n\n    broadcastChannel.postMessage({\n      type: 'test-results',\n      data: {\n        id: '1',\n        description: 'Jasmine Tests',\n        suite: [],\n        log: [],\n        success: execution.overallStatus === 'passed',\n        total: 1,\n      },\n    });\n  });\n});\n"],"names":[],"version":3,"file":"__parcel_bundled_tests.js.map","sourceRoot":"../../"}